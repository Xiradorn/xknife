"use strict";var XKnife=(()=>{var e=Object.defineProperty,t=Object.getOwnPropertyDescriptor,r=Object.getOwnPropertyNames,o=Object.prototype.hasOwnProperty,n={};((t,r)=>{for(var o in r)e(t,o,{get:r[o],enumerable:!0})})(n,{XMorpher:()=>s,XirGlyphMorpher:()=>s});var a,s=class e{static base64ToBytes(e){const t=atob(e);return Uint8Array.from(t,(e=>e.charCodeAt(0)))}static bytesToBase64(e){const t=String.fromCodePoint(...e);return btoa(t)}static isWellFormed(e){if("function"==typeof e.isWellFormed)return e.isWellFormed();try{return encodeURIComponent(e),!0}catch(e){return!1}}static encoder(t){if(e.isWellFormed(t))return e.bytesToBase64((new TextEncoder).encode(t));console.log(`Cannot process a string with lone surrogates: [${t}]`)}static decoder(t){if(e.isWellFormed(t))return(new TextDecoder).decode(e.base64ToBytes(t));console.log(`Cannot process a string with lone surrogates: [${t}]`)}static async fileIn64(e){const t=await e.arrayBuffer();return btoa(String.fromCharCode(...new Uint8Array(t)))}static toUnicode(e){return e.split("").map((e=>`\\u${e.charCodeAt(0).toString(16).padStart(4,"0")}`)).join("")}static toUnicodeSurrogates(e){return Array.from(e).map((e=>`\\u${e.codePointAt(0).toString(16).padStart(4,"0")}`)).join("")}};return a=n,((n,a,s,i)=>{if(a&&"object"==typeof a||"function"==typeof a)for(let c of r(a))o.call(n,c)||c===s||e(n,c,{get:()=>a[c],enumerable:!(i=t(a,c))||i.enumerable});return n})(e({},"__esModule",{value:!0}),a)})();