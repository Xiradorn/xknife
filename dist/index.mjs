var e=class e{static base64ToBytes(e){const t=atob(e);return Uint8Array.from(t,(e=>e.charCodeAt(0)))}static bytesToBase64(e){const t=String.fromCodePoint(...e);return btoa(t)}static isWellFormed(e){if(void 0!==e.isWellFormed())return e.isWellFormed();try{return encodeURIComponent(e),!0}catch(e){return!1}}static encoder(t){if(e.isWellFormed(t))return e.bytesToBase64((new TextEncoder).encode(t));console.log(`Cannot process a string with lone surrogates: [${t}]`)}static decoder(t){if(e.isWellFormed(t))return(new TextDecoder).decode(e.base64ToBytes(t));console.log(`Cannot process a string with lone surrogates: [${t}]`)}static async fileIn64(e){const t=await e.arrayBuffer();return btoa(String.fromCharCode(...new Uint8Array(t)))}};export{e as XGM64,e as XirGlyphMorpher64};